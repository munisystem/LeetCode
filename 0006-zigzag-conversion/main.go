package main

import (
	"strings"
)

// numRows2 の場合
// 0番目: 0, 2, 4, 6, 8 (0+2,2,2,2...) (rows-2)*2 + 2
// 1番目: 1, 3, 5, 7, 9 (1+2,2,2,2...)
//
// numRows3 の場合
// 0番目: 0, 4,  8, 12 (0+4,4,4,4...)
// 1番目: 1, 3,  5,  7 (1+(4-2),4,(4-2),4...)
// 2番目: 2, 6, 10, 14 (2+4,4,4,4...)
//
// numRows4 の場合
// 0番目: 0, 6, 12, 18 (0+6,6,6,6...)
// 1番目: 1, 5,  7, 11 (1+(6-2),6,(6-2),6...)
// 2番目: 2, 4,  8, 10 (2+(6-4),6,(6-4),6...)
// 3番目: 3, 9, 15, 21 (3+6,6,6,6...)
//

// numRows5 の場合
// 0番目: 0,  8, 16, 24 (0+8,8,8,8...)
// 1番目: 1,  7,  9, 15 (1+(8-2),8,(8-2),8...)
// 2番目: 2,  6, 10, 14 (2+(8-4),8,(8-4),8...)
// 3番目: 3,  5, 11, 13 (3+(8-6),8,(8-6),8...)
// 4番目: 4, 12, 20, 28 (4+8,8,8,8...)

func convert(s string, numRows int) string {
	if numRows == 1 {
		return s
	}
	a := make([]string, numRows)
	n := (numRows-2)*2 + 2
	for i := 0; i < numRows; i++ {
		for j := i; j-i*2 < len(s); j = j + n {
			if !(i == 0 || i == numRows-1) && j > n {
				a[i] = a[i] + s[j-i*2:j-i*2+1]
			}
			if j < len(s) {
				a[i] = a[i] + s[j:j+1]
			}
		}
	}
	return strings.Join(a, "")
}
